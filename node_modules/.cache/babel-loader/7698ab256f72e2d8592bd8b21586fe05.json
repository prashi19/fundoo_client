{"ast":null,"code":"import _classCallCheck from \"/home/admin1/fundoo/Client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/admin1/fundoo/Client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/admin1/fundoo/Client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/admin1/fundoo/Client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/admin1/fundoo/Client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/admin1/fundoo/Client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/admin1/fundoo/Client/src/components/createNote.jsx\";\nimport React, { Component } from 'react';\nimport { Input, Card, createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport Tools from './tools';\nimport { Button } from '@material-ui/core';\nimport { createNote } from '../services/noteServices';\nimport EditPin from '../components/editPin';\nimport UploadImage from './uploadImage';\nvar theme = createMuiTheme({\n  overrides: {\n    MuiPaper: {\n      rounded: {\n        borderRadius: \"15px\"\n      },\n      elevation1: {\n        boxShadow: \"0 3px 5px rgba(0,0,0,0.20)\"\n      }\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nvar createNotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(createNotes, _Component);\n\n  function createNotes(props) {\n    var _this;\n\n    _classCallCheck(this, createNotes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(createNotes).call(this, props));\n    _this.state = {\n      openNote: false,\n      title: \"\",\n      description: \"\",\n      reminder: \"\",\n      color: \"rgb(255, 255, 255)\",\n      pinned: false,\n      image: \"\",\n      archive: false,\n      trash: false,\n      newNote: {}\n    };\n    _this.handleTitle = _this.handleTitle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDescription = _this.handleDescription.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleColor = _this.handleColor.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleArchive = _this.handleArchive.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleReminder = _this.handleReminder.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePinned = _this.handlePinned.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * @description:it will handle the title event\n   * @param {*event for title} evt \n   */\n\n\n  _createClass(createNotes, [{\n    key: \"handleTitle\",\n    value: function handleTitle(evt) {\n      try {\n        this.setState({\n          title: evt.target.value\n        });\n      } catch (err) {\n        console.log(\"error at handleTitle in createNotes\");\n      }\n    }\n    /**\n     * @description:it will handle the description event\n     * @param {*event for description} evt \n     */\n\n  }, {\n    key: \"handleDescription\",\n    value: function handleDescription(evt) {\n      try {\n        this.setState({\n          description: evt.target.value\n        });\n      } catch (err) {\n        console.log(\"error at handleDescription in createNotes\");\n      }\n    }\n    /**\n     * @description:it will handle the reminder event\n     * @param {*value for reminder} value \n     */\n\n  }, {\n    key: \"handleReminder\",\n    value: function handleReminder(value) {\n      try {\n        this.setState({\n          reminder: value\n        });\n      } catch (err) {\n        console.log(\"error at handleReminder in createNotes\");\n      }\n    }\n    /**\n     * @description:it will handle the color event\n     * @param {*value for color} value \n     */\n\n  }, {\n    key: \"handleColor\",\n    value: function handleColor(value) {\n      try {\n        this.setState({\n          color: value\n        });\n      } catch (err) {\n        console.log(\"error at handleColor in createNotes\");\n      }\n    }\n    /**\n     * @description:it will handle the archive event\n     * @param {*value for archive} value \n     */\n\n  }, {\n    key: \"handleArchive\",\n    value: function handleArchive(value) {\n      try {\n        this.setState({\n          archive: value\n        });\n      } catch (err) {\n        console.log(\"error at handleArchive in createNotes\");\n      }\n    }\n    /**\n     * @description:it will handle the pinned event\n     * @param {*value for pinned} value \n     */\n\n  }, {\n    key: \"handlePinned\",\n    value: function handlePinned(value) {\n      try {\n        this.setState({\n          pinned: value\n        });\n      } catch (err) {\n        console.log(\"error at handlePinned in createNotes\");\n      }\n    }\n    /**\n     * @description:it will handle the creating a new note\n     */\n\n  }, {\n    key: \"handleToggle\",\n    value: function handleToggle() {\n      var _this2 = this;\n\n      try {\n        this.setState({\n          openNote: !this.state.openNote\n        }); // console.log(\"pinned\", this.state.openNote);\n\n        if (this.state.title !== '' || this.state.description !== '' || this.state.color !== \"rgb(255, 255, 255)\") {\n          var note = {\n            userId: localStorage.getItem('userId'),\n            title: this.state.title,\n            description: this.state.description,\n            reminder: this.state.reminder,\n            color: this.state.color,\n            image: this.state.image,\n            archive: this.state.archive,\n            pinned: this.state.pinned,\n            trash: this.state.trash\n          };\n          createNote(note).then(function (result) {\n            console.log(\"create note result from back-end====>\", result.data.data);\n\n            _this2.setState({\n              newNote: result.data.data.note\n            });\n\n            _this2.props.getNewNote(_this2.state.newNote);\n          }).catch(function (error) {\n            alert(error);\n          });\n          this.setState({\n            title: \"\",\n            description: \"\",\n            reminder: \"\",\n            color: \"rgb(255, 255, 255)\",\n            image: \"\",\n            archive: false,\n            pinned: false,\n            trash: false\n          });\n        }\n      } catch (err) {\n        console.log(\"error at handleToggle in createNotes\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return !this.state.openNote ? React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"createNoteParent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"createNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"staticCreateNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"noteInputBase1\",\n        multiline: true,\n        disableUnderline: true,\n        placeholder: \"Take a note ....\",\n        id: \"description\",\n        readOnly: true,\n        onClick: this.handleToggle,\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(UploadImage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))))) : React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"createNoteParent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"createNote1\",\n        style: {\n          backgroundColor: this.state.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createNotePinIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"noteInputBase\",\n        multiline: true,\n        disableUnderline: true,\n        id: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        onChange: this.handleTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(EditPin, {\n        pinStatus: this.state.pinned,\n        cardPropsToPin: this.handlePinned,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        className: \"noteInputBase\",\n        multiline: true,\n        disableUnderline: true,\n        placeholder: \"Take a note...\",\n        id: \"description\",\n        value: this.state.description,\n        onChange: this.handleDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cardToolsClose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Tools, {\n        reminder: this.handleReminder,\n        createNotePropsToTools: this.handleColor,\n        archiveNote: this.handleArchive,\n        archiveStatus: this.state.archive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Close\")))));\n    }\n  }]);\n\n  return createNotes;\n}(Component);\n\nexport { createNotes as default };","map":{"version":3,"sources":["/home/admin1/fundoo/Client/src/components/createNote.jsx"],"names":["React","Component","Input","Card","createMuiTheme","MuiThemeProvider","Tools","Button","createNote","EditPin","UploadImage","theme","overrides","MuiPaper","rounded","borderRadius","elevation1","boxShadow","typography","useNextVariants","createNotes","props","state","openNote","title","description","reminder","color","pinned","image","archive","trash","newNote","handleTitle","bind","handleDescription","handleToggle","handleColor","handleArchive","handleReminder","handlePinned","evt","setState","target","value","err","console","log","note","userId","localStorage","getItem","then","result","data","getNewNote","catch","error","alert","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Input, Card, createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport Tools from './tools';\nimport { Button } from '@material-ui/core';\nimport { createNote } from '../services/noteServices';\nimport EditPin from '../components/editPin';\nimport UploadImage from './uploadImage';\nconst theme = createMuiTheme({\n    overrides: {\n        MuiPaper: {\n            rounded: {\n                borderRadius: \"15px\",\n            },\n            elevation1: {\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.20)\"\n            }\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n})\nexport default class createNotes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            openNote: false,\n            title: \"\",\n            description: \"\",\n            reminder: \"\",\n            color: \"rgb(255, 255, 255)\",\n            pinned: false,\n            image: \"\",\n            archive: false,\n            trash: false,\n            newNote: {}\n        }\n        this.handleTitle = this.handleTitle.bind(this);\n        this.handleDescription = this.handleDescription.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleColor = this.handleColor.bind(this);\n        this.handleArchive = this.handleArchive.bind(this);\n        this.handleReminder = this.handleReminder.bind(this);\n        this.handlePinned = this.handlePinned.bind(this);\n    }\n    /**\n     * @description:it will handle the title event\n     * @param {*event for title} evt \n     */\n    handleTitle(evt) {\n        try {\n            this.setState({ title: evt.target.value })\n        } catch (err) {\n            console.log(\"error at handleTitle in createNotes\");\n        }\n    }\n    /**\n     * @description:it will handle the description event\n     * @param {*event for description} evt \n     */\n    handleDescription(evt) {\n        try {\n            this.setState({ description: evt.target.value })\n        } catch (err) {\n            console.log(\"error at handleDescription in createNotes\");\n        }\n    }\n    /**\n     * @description:it will handle the reminder event\n     * @param {*value for reminder} value \n     */\n    handleReminder(value) {\n        try {\n            this.setState({ reminder: value })\n        } catch (err) {\n            console.log(\"error at handleReminder in createNotes\");\n        }\n    }\n    /**\n     * @description:it will handle the color event\n     * @param {*value for color} value \n     */\n    handleColor(value) {\n        try {\n            this.setState({ color: value });\n        } catch (err) {\n            console.log(\"error at handleColor in createNotes\");\n        }\n    }\n    /**\n     * @description:it will handle the archive event\n     * @param {*value for archive} value \n     */\n    handleArchive(value) {\n        try {\n            this.setState({ archive: value });\n        } catch (err) {\n            console.log(\"error at handleArchive in createNotes\");\n        }\n    }\n    /**\n     * @description:it will handle the pinned event\n     * @param {*value for pinned} value \n     */\n    handlePinned(value) {\n        try {\n            this.setState({ pinned: value });\n        } catch (err) {\n            console.log(\"error at handlePinned in createNotes\");\n        }\n    }\n    /**\n     * @description:it will handle the creating a new note\n     */\n    handleToggle() {\n        try {\n            this.setState({ openNote: !this.state.openNote });\n            // console.log(\"pinned\", this.state.openNote);\n            if (this.state.title !== '' || this.state.description !== '' || this.state.color !== \"rgb(255, 255, 255)\") {\n                const note = {\n                    userId: localStorage.getItem('userId'),\n                    title: this.state.title,\n                    description: this.state.description,\n                    reminder: this.state.reminder,\n                    color: this.state.color,\n                    image: this.state.image,\n                    archive: this.state.archive,\n                    pinned: this.state.pinned,\n                    trash: this.state.trash,\n                }\n                createNote(note)\n                    .then((result) => {\n                        console.log(\"create note result from back-end====>\", result.data.data);\n                        this.setState({\n                            newNote: result.data.data.note\n                        })\n                        this.props.getNewNote(this.state.newNote)\n                    })\n                    .catch((error) => {\n                        alert(error);\n                    })\n                this.setState({\n                    title: \"\",\n                    description: \"\",\n                    reminder: \"\",\n                    color: \"rgb(255, 255, 255)\",\n                    image: \"\",\n                    archive: false,\n                    pinned: false,\n                    trash: false\n                })\n            }\n        } catch (err) {\n            console.log(\"error at handleToggle in createNotes\");\n        }\n    }\n    render() {\n        return (!this.state.openNote ?\n            <MuiThemeProvider theme={theme}>\n                <div id=\"createNoteParent\">\n                    <Card className=\"createNote\">\n                        <div className=\"staticCreateNote\">\n                            <Input\n                                className=\"noteInputBase1\"\n                                multiline\n                                disableUnderline={true}\n                                placeholder=\"Take a note ....\"\n                                id=\"description\"\n                                readOnly={true}\n                                onClick={this.handleToggle}\n                                value=\"\"\n                            />\n                            <UploadImage />\n                        </div>\n                    </Card>\n                </div>\n            </MuiThemeProvider>\n            :\n            <MuiThemeProvider theme={theme}>\n                <div id=\"createNoteParent\">\n                    <Card className=\"createNote1\" style={{ backgroundColor: this.state.color }}>\n                        <div className=\"createNotePinIcon\">\n                            <Input\n                                className=\"noteInputBase\"\n                                multiline\n                                disableUnderline={true}\n                                id=\"title\"\n                                placeholder=\"Title\"\n                                value={this.state.title}\n                                onChange={this.handleTitle}\n                            />\n                            <div>\n                                <EditPin\n                                    pinStatus={this.state.pinned}\n                                    cardPropsToPin={this.handlePinned}\n                                />\n                            </div>\n                        </div>\n                        <Input\n                            className=\"noteInputBase\"\n                            multiline\n                            disableUnderline={true}\n                            placeholder=\"Take a note...\"\n                            id=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleDescription}\n                        />\n                        <div className=\"cardToolsClose\" >\n                            <Tools\n                                reminder={this.handleReminder}\n                                createNotePropsToTools={this.handleColor}\n                                archiveNote={this.handleArchive}\n                                archiveStatus={this.state.archive}\n                            />\n                            <Button onClick={this.handleToggle}>Close</Button>\n                        </div>\n                    </Card>\n                </div>\n            </MuiThemeProvider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}